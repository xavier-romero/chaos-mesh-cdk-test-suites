# https://chaos-mesh.org/docs/simulate-heavy-stress-on-kubernetes/

attacknetConfig:
  waitBeforeInjectionSeconds: 1
  reuseDevnetBetweenRuns: true
  existingDevnetNamespace: "kt-cdk"
  allowPostFaultInspection: true

# Not used as we're not deploying L1, but otherwise attacknet refuses to start
harnessConfig:
  networkConfig: default.yaml
  networkType: ethereum

testConfig:
  tests:

  - testName: time-executor
    planSteps:
    - stepType: injectFault
      description: 'Inject fault'
      chaosFaultSpec:
        kind: TimeChaos
        apiVersion: chaos-mesh.org/v1alpha1
        spec:
          mode: all
          selector:
            labelSelectors:
              'kurtosistech.com/id': 'executor001'
          timeOffset: -10m100ns
          duration: 60s
    - stepType: waitForFaultCompletion
      description: wait for faults to terminate

  - testName: time-rpc
    planSteps:
    - stepType: injectFault
      description: 'Inject fault'
      chaosFaultSpec:
        kind: TimeChaos
        apiVersion: chaos-mesh.org/v1alpha1
        spec:
          mode: all
          selector:
            labelSelectors:
              'kurtosistech.com/id': 'rpc001'
          timeOffset: -10m100ns
          duration: 60s
    - stepType: waitForFaultCompletion
      description: wait for faults to terminate

  - testName: time-sequencer
    planSteps:
    - stepType: injectFault
      description: 'Inject fault'
      chaosFaultSpec:
        kind: TimeChaos
        apiVersion: chaos-mesh.org/v1alpha1
        spec:
          mode: all
          selector:
            labelSelectors:
              'kurtosistech.com/id': 'sequencer001'
          timeOffset: -10m100ns
          duration: 60s
    - stepType: waitForFaultCompletion
      description: wait for faults to terminate
